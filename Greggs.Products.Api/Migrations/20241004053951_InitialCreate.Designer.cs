// <auto-generated />
using Greggs.Products.Api.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Greggs.Products.Api.Migrations
{
    [DbContext(typeof(ProductContext))]
    [Migration("20241004053951_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Greggs.Products.Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceInPounds")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sausage Roll",
                            PriceInPounds = 1m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Vegan Sausage Roll",
                            PriceInPounds = 1.1m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Steak Bake",
                            PriceInPounds = 1.2m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Yum Yum",
                            PriceInPounds = 0.7m
                        },
                        new
                        {
                            Id = 5,
                            Name = "Pink Jammie",
                            PriceInPounds = 0.5m
                        },
                        new
                        {
                            Id = 6,
                            Name = "Mexican Baguette",
                            PriceInPounds = 2.1m
                        },
                        new
                        {
                            Id = 7,
                            Name = "Bacon Sandwich",
                            PriceInPounds = 1.95m
                        },
                        new
                        {
                            Id = 8,
                            Name = "Coca Cola",
                            PriceInPounds = 1.2m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
